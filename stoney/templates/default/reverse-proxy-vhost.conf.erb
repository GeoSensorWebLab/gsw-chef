# Managed by Chef, do not edit;
# See "gsw-chef/stoney" cookbook templates.

# Virtual Host for HTTP (no security)
server {
    # Port 80 is the default for regular HTTP, and clients will default
    # to using this port.
    listen 80;
    listen [::]:80;

    # Do not send nginx version to clients
    server_tokens off;

    # root is used for well-known challenges for certbot
    root /var/www/html;

    # domain(s) for this virtual host. Clients will send the domain as
    # the "Host" header and nginx will use that to proxy to this vhost.
    server_name  <%= @domains.join(" ") %>;

    # sendfile is not useful for reverse proxies as static files on this
    # server are not being sent to clients.
    sendfile off;

    # tcp_nopush is only used with sendfile, so it can stay off.
    tcp_nopush off;

    # nodelay is used with keep-alive, SSL connections, unbuffered 
    # proxies, and WebSocket proxies, so it can stay on.
    tcp_nodelay on;

    # Enable compression configuration
    include includes/compression.conf;

    # This is a semi-secret directory not for public use; it is only
    # used to verify the server identify with "Let's Encrypt", so they
    # know we own it when we are setting up the free HTTPS certificate.
    location /.well-known/acme-challenge/ {
        alias /var/www/html/.well-known/acme-challenge/;
    }

    location / {
        <% if @hsts_enabled %>
        # Use HTTP Strict Transport Security for 1 year. Preload enabled
        # for browsers that support it.
        add_header Strict-Transport-Security "max-age=31536000; preload";
        <% end %>
        
        # Prevent re-interpretation of content types
        add_header X-Content-Type-Options nosniff;

        # Block cross-site scripting requests
        add_header X-XSS-Protection "1; mode=block";

        # Only send the domain (no path) as a referrer
        add_header Referrer-Policy "origin";

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        # If server is offline, return an error quickly
        proxy_connect_timeout 2s;
        proxy_pass http://<%= @proxy_host %>:<%= @proxy_port %>/;
    }
}

<% if @ssl_enabled %>
# Virtual Host for HTTPS (security certificates enabled)

# We will loop through each domain and create a vhost for each one, as
# each one will have its own separate HTTPS certificate.
<% for domain in @domains %>
# HTTPS for <%= domain %>
server {
    # Port 443 is the default for HTTPS, and clients will default
    # to using this port if the scheme is HTTPS.
    listen       443 ssl;

    # Clients will send the domain as the "Host" header and nginx will
    # use that to proxy to this vhost when port 443 is used.
    server_name  <%= domain %>;

    # Do not send nginx version to clients
    server_tokens off;

    # sendfile is not useful for reverse proxies as static files on this
    # server are not being sent to clients.
    sendfile off;

    # tcp_nopush is only used with sendfile, so it can stay off.
    tcp_nopush off;

    # nodelay is used with keep-alive, SSL connections, unbuffered 
    # proxies, and WebSocket proxies, so it can stay on.
    tcp_nodelay on;

    # Enable compression configuration
    include includes/compression.conf;

    ssl_certificate /etc/letsencrypt/live/<%= domain %>/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/<%= domain %>/privkey.pem;
    ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4';
    ssl_prefer_server_ciphers on;

    location / {
        <% if @hsts_enabled %>
        # Use HTTP Strict Transport Security for 1 year. Preload enabled
        # for browsers that support it.
        add_header Strict-Transport-Security "max-age=31536000; preload";
        <% end %>
        
        # Prevent re-interpretation of content types
        add_header X-Content-Type-Options nosniff;

        # Block cross-site scripting requests
        add_header X-XSS-Protection "1; mode=block";

        # Only send the domain (no path) as a referrer
        add_header Referrer-Policy "origin";

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        # If server is offline, return an error quickly
        proxy_connect_timeout 2s;
        proxy_pass http://<%= @proxy_host %>:<%= @proxy_port %>/;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
<% end %>
<% end %>